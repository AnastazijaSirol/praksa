Moj je zadatak bio istražiti LLM-ove za prevođenje i omogućiti višejezičnost unutar testne aplikacije korištenjem jednog od LLM-ova na način da se klikom na button omogući promjena jezika aplikacije između hrvatskog i engleskog. 

Ključni koraci u ostvarivanju tog cilja, koji su ujedno činili tijek mog rada tijekom prakse, bili su sljedeći: Praksu sam započela istraživanjem dostupnih LLM-ova za prevođenje. Nakon što sam odabrala nekoliko LLM-ova za koje smo smatrali da najbolje odgovaraju zadatku i zadanim kriterijima, prešla sam na njihovo testiranje kako bih procijenila kvalitetu prijevoda i odabrala onaj koji ću koristiti u aplikaciji. Nakon što smo odabrali najbolji LLM, započela sam razvoj aplikacije i implementaciju tog modela. Kroz aplikaciju sam zatim proslijedila resursnu datoteku za prevođenje, a na kraju, koristeći različite metode, o kojima ću detaljnije govoriti u nastavku, radila sam na poboljšanju kvalitete i brzine prijevoda.

Istraživanje LLM-ova sam provela tako što sam u excel tablicu izdvojila 10-ak LLM-ova te za svaki od njih istražila cijenu i način korištenja, način obrade podataka te prednosti i nedostatke. Tijekom analize te excel tablice, ključni kriteriji u odabiru LLM-ova bili su da se model može loklano preuzeti kako se podaci ne bi morali obrađivati na Cloudu. Također tražili smo model koji je namijenjen isključivo prevođenju jer smo smatrali da nije opitmalno koristiti model kojemu je prijevod samo jedna od funkcionalnosti s obzirom da su takvi modeli puno veći i ne bi bilo optimalno preuzimati tako veliki model samo za prijevod, ali sam jedan od takvih modela kasnije koristila za  validaciju. I na kraju, prednost su imali besplatni modeli. Na temelju toga, došli smo do zaključka da su najbolji modeli za ovaj zadatak i kriterije googleov i dva facebookova modela, no ovaj drugi facebookov model nije u potpunosti spreman za produkciju upotrebu pa smo odlučili uzeti sljedeća dva modela u uži krug odabira. 

Ova dva modela koja su ušla u uži izbor sam testirala s različitim teskovima. Kao što vidite, googleov model je prevodio izuzetno loše čak i jednostavne rečenice, dok je facebookov model pružao bolji prijevod. Modele sam testirala i na dužim tekstovima, a rezultati su bili dosta slični s tim da je facebookov model duži tekst rastavljao na chunkove pa se znalo dogoditi da je jedan chunk bio rečenica i pol što je u prijevodu bilo vidljivo jer su neki dijelovi izgubili smisao pa sam modificirala kod tako da mu jedna rečenica bude jedan chunk i takav je način pružao bolje prijevode kod dužih tekstova. Na temelju tih rezultata došli smo do zaključka da ćemo koristiti facebookov model jer on pruža bolje prijevode.

Nakon odabira modela, prešla sam na razvoj testna aplikacije. Aplikaciju sad krenula razvijati u .net 9 frameworku jer je on noviji pa sam htjela koristiti njega, no onda sam došla do zaključka da neke funkcionalnosti koje su podržane u tom frameworku nisu podržane u 4.8 i obrnuto, što je moglo dovesti do nekompatibilnosti pri korištenju resursne datoteke iz vaše aplikacije koja je pisana u 4.8 pa sam se ipak odlučila na ovaj stariji framework. 
U prvoj verziji aplikacije, skripta za prevođenje se pozivala za svaki resurs iz resursne datoteke posebno, što je bilo izuzteno sporo (pročitaj zagradu). To je dovelo do optimiziranog rješenja da se skripta poziva s putanjom do resursnog filea i onda se u skipti prevodi svaki resur posebno, ali se ta skipta pozove jednom i onda kada prevede sve resurse vrati nazad prevedenu datoteku. 

Nakon prezentacije ću vam pokazati aplikaciju, kako radi i proći kroz kod. 

Kada sam dovršila aplikaciju, došao je red da vašu resursnu datoteku proslijedim na prevođenje kroz testnu aplikaciju. 
Prva verzija prijevoda resursa bila je na način da se proslijedi tekst koji se treba prevesti te jezici s kojeg i na kojeg se prevodi, a model to prevede. Takav način je bio dosta brz, što se može zaključiti na temelju toga da se vaša datoteka koja ima 600-tinjak resursa prevela u 30ak min, no prijevod je bio pretjerano doslovan. Primjer prijevoda bila je uputnica... S toga, došli smo na ideju da se modelu proslijedi kontekst u kojem treba prevesti resurs pa sam ažurirala kod na način da se uz input tekst modelu prolijedi i hardkodirani kontekst. On to sve skupa prevede ali kao rezultat vrati prevedeni tekst, ali bez konteksta. To je dovelo do preciznijeg prijevoda, iako i dalje ima dosta mjesta za napredak, a što se tiče vremenskog izvođenja, proces se dosta usporio pa je sa 30 min prešlo na 70min. 

Ovdje sam dala primjere prijevod sa i bez konteksta. (primjere pročitaj) Možemo zaključiti da je većina prijevoda bolja sa kontekstom, iako nisu ni svi ti prijevodi posve dobri, a postoje i neki reursi koji su bolje prevedni bez konteksta.

Kao što sam rekla na početku, veći modeli koji su imaju više funkcionalnosti mogu poslužiti za validaciju prijevoda pa sam tako ovdje uspoređivala prijevoda s prijevodima koje je dao gpt4. Prema ovim prijevodima se može vidjeti da su oba modela prevela razumljivo iako se razlikuju u nijansama. 

Prezentaciju bih zaključila s nekim mogućim poboljšanjima glede ubrzanja i povećanja kvalitete prijevoda. Što se tiče ubrzanja, može se koristiti manja verzija modela, iako bi ona mogla dovesti do lošijeg prijevoda, a što se tiče povećanja kvalitete prijevida, može se fine-tunirati model u medicinskom kontekstu kako bi bolje prevodio neke stručne termine. 

